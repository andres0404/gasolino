volumes:
  db_storage:
  n8n_storage:

services:
  postgres:
    image: postgres:16.10-alpine3.22
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  adminer:
    image: adminer:latest
    ports:
      - "8080:8080"

  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - WEBHOOK_TUNNEL_URL=${WEBHOOK_TUNNEL_URL}
      - WEBHOOK_URL=${WEBHOOK_TUNNEL_URL}
    ports:
      - 5678:5678
    links:
      - postgres
    volumes:
      - n8n_storage:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy

  #ollama:
  #  image: ollama/ollama
  #  volumes:
  #    - .ollama:/root/.ollama
  #  container_name: ollama
  #  ports:
  #    - "11434:11434"


  nginx-proxy-manager:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '81:81'
      - '8000:8000'
      - '8001:8001'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

      
  landing-page:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./landing-page:/usr/share/nginx/html
